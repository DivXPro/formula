import * as date from './date';
import * as math from './math';
import * as logic from './logic';
import * as text from './text';

import { DataType } from './DateType';
import { TYPE } from '.';

export const formulaType: Record<string, (...args: any) => DataType> = {
  ...date,
  ...math,
  ...logic,
  ...text,
};

export const formulaResultType: Record<string, TYPE> = {
  DATE: TYPE.DATE,
  DATEVALUE: TYPE.DATE,
  DAY: TYPE.NUMBER,
  DAYS: TYPE.NUMBER,
  DAYS360: TYPE.NUMBER,
  EDATE: TYPE.DATE,
  EOMONTH: TYPE.DATE,
  HOUR: TYPE.NUMBER,
  MINUTE: TYPE.NUMBER,
  ISOWEEKNUM: TYPE.NUMBER,
  MONTH: TYPE.NUMBER,
  NOW: TYPE.TIME,
  SECOND: TYPE.NUMBER,
  TIME: TYPE.TIME,
  // TIMEVALUE: TYPE.DATE,
  TODAY: TYPE.DATE,
  WEEKDAY: TYPE.NUMBER,
  YEAR: TYPE.NUMBER,
  WEEKNUM: TYPE.NUMBER,
  AND: TYPE.BOOLEAN,
  IF: TYPE.UNKNOW,
  NOT: TYPE.BOOLEAN,
  OR: TYPE.BOOLEAN,
  SWITCH: TYPE.UNKNOW,
  ISBLANK: TYPE.BOOLEAN,
  ABS: TYPE.NUMBER,
  CEILING: TYPE.NUMBER,
  // CEILINGMATH: TYPE.DATE,
  EXP: TYPE.NUMBER,
  FLOOR: TYPE.NUMBER,
  // FLOORMATH: TYPE.DATE,
  LN: TYPE.NUMBER,
  LOG: TYPE.NUMBER,
  LOG10: TYPE.NUMBER,
  MAX: TYPE.NUMBER,
  MIN: TYPE.NUMBER,
  MOD: TYPE.NUMBER,
  ROUND: TYPE.NUMBER,
  ROUNDDOWN: TYPE.NUMBER,
  ROUNDUP: TYPE.NUMBER,
  SQRT: TYPE.NUMBER,
  AVERAGE: TYPE.NUMBER,
  SUM: TYPE.NUMBER,
  COUNT: TYPE.NUMBER,
  COUNTA: TYPE.NUMBER,
  POWER: TYPE.NUMBER,
  CONCATENATE: TYPE.STRING,
  EXACT: TYPE.BOOLEAN,
  FIND: TYPE.NUMBER,
  LEFT: TYPE.STRING,
  LEN: TYPE.NUMBER,
  LOWER: TYPE.STRING,
  MID: TYPE.STRING,
  NUMBERVALUE: TYPE.NUMBER,
  PROPER: TYPE.STRING,
  REPT: TYPE.STRING,
  RIGHT: TYPE.STRING,
  SEARCH: TYPE.STRING,
  // SPLIT: TYPE.DATE,
  SUBSTITUTE: TYPE.STRING,
  TRIM: TYPE.STRING,
  UPPER: TYPE.STRING,
  // INCLUDES: TYPE.DATE,
};
